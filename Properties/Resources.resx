<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="FtpHelp" xml:space="preserve">
    <value>FTP サーバー サービス (デーモンとも呼ぶ) を実行するコンピューターとの間で、
ファイルの送受信を行います。FTP は対話的に使用できます。

FTP [-v] [-d] [-i] [-n] [-g] [-s:filename] [-a] [-A] [-x:sendbuffer]
    [-r:recvbuffer] [-b:asyncbuffers] [-w:windowsize] [host]

  -v              リモート サーバーの応答を表示しません。
  -n              最初の接続時に自動ログインを行いません。
  -i              複数ファイルの転送中に、対話的なメッセージ表示を
                  無効にします。
  -d              デバッグを有効にします。
  -g              ファイル名のグロビングを無効にします (GLOB コマンドを参照)。
  -s:filename     FTP コマンドを記述したテキスト ファイルを指定します。
                  これらのコマンドは、FTP の開始後に自動実行されます。
  -a              データ接続のバインド時に、いずれかのローカル インターフェイ
                  スを使用します。
  -A              匿名でログインします。
  -x:send sockbuf SO_SNDBUF の既定のサイズである 8192 を上書きします。
  -r:recv sockbuf SO_RCVBUF の既定のサイズである 8192 を上書きします。
  -b:async count  既定の非同期数である 3 を上書きします。
  -w:windowsize   既定の転送バッファー サイズである 65535 を上書きします。
  host            接続先のリモート ホストのホスト名または IP アドレス
                  を指定します。

メモ:
  - mget および mput コマンドには、それぞれ yes/no/quit の意味を表す y/n/q を
    指定します。
  - コマンドを中止するには Ctrl+C キーを押します。</value>
  </data>
  <assembly alias="mscorlib" name="mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="VisualBat_Executer" type="System.Byte[], mscorlib">
    <value>
        TVpQAAIAAAAEAA8A//8AALgAAAAAAAAAQAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAIAALoQAA4ftAnNIbgBTM0hkJBUaGlzIHByb2dyYW0gbXVzdCBiZSBydW4gdW5kZXIgV2luMzINCiQ3
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQRQAATAEGACAR91IAAAAAAAAAAOAADgMLAQUA
        ABAAAAAQAAAAAAAAABAAAAAQAAAAIAAAAABAAAAQAAAAAgAABAAAAAAAAAAEAAAAAAAAAABwAAAABAAA
        AAAAAAMAAAAAABAAACAAAAAAEAAAEAAAAAAAABAAAAAAQAAAdgAAAAAwAAA/AwAAAFAAAAACAAAAAAAA
        AAAAAAAAAAAAAAAAAGAAAMwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC50ZXh0AAAAABAAAAAQAAAACAAA
        AAYAAAAAAAAAAAAAAAAAACAAAGAuZGF0YQAAAAAQAAAAIAAAAAIAAAAOAAAAAAAAAAAAAAAAAABAAADA
        LmlkYXRhAAAAEAAAADAAAAAEAAAAEAAAAAAAAAAAAAAAAAAAQAAAQC5lZGF0YQAAABAAAABAAAAAAgAA
        ABQAAAAAAAAAAAAAAAAAAEAAAEAucnNyYwAAAAAQAAAAUAAAAAIAAAAWAAAAAAAAAAAAAAAAAABAAABA
        LnJlbG9jAAAAEAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA6ScGAABERFgAAAAAAAAAAAAAoTNBgADB
        4AKjlyBAAFJqAOghBwAAi9DoKgQAAFroKQQAAOgpBAAAagDoJwQAAFloPCBAAGoA6PsGAACjmyBAAGoA
        6QAAAADpDgQAADPAoIUgQADDoZsgQADDYLsAULC8U2itCwAAw7kAAAAAC8l0TYM9kyBAAABzCrj+AAAA
        6Nf///+5AAAAAFFqCOisBgAAUOi4BgAAC8B1Crj9AAAA6Lb///9QUP81kyBAAOiuAwAA/zWTIEAA6KgD
        AABfw7kAAAAAC8l0GeidAwAAo5MgQACD+ABzkbj8AAAA6Hr////Dgz2TIEAAAHIo/zWTIEAA6HkDAAAL
        wHQZUGoI6DsGAABQ6E0GAAD/NZMgQADoYQMAAMPDgz2TIEAAAHIQ6L//////NZMgQADoSwMAAMOhkyBA
        AGRnixYsAIsTgsOQVYvsgcQE8P//UIHEpPf//1NWVzP2M8CJRfiNlfj7//9SaAAEAADo2QUAAGgABAAA
        jY349///UWoA6LQFAABoAAQAAI2F+Of//1BorCBAAOiSBQAAaLQgQACNlfj3//9S6BkFAACDxAiL2IXb
        dR1qAGjWIEAAaLYgQABqAOijBQAAuAEAAADpdQIAAGoCavxT6PsEAACDxAwL8FNqAWoEjVX8UujiBAAA
        g8QQhcAPlsGD4QEL8WoCi0X8g8AE99hQU+jKBAAAg8QMC/CF9nUGg338AH8dagBo/CBAAGjcIEAAagDo
        PAUAALgBAAAA6Q4CAADoEwUAAFBoAiFAAI2V+Pv//1KNjfjz//9R6LYEAACDxAiL8I2F+Pv//1DoqwQA
        AFkD8FbokAQAAIPEDGgJIUAAjZX48///UuhABAAAg8QIi/iF23UdagBoKCFAAGgLIUAAagDoygQAALgB
        AAAA6ZwBAAAz9jt1/H0cV1PoBgQAAFk1/wAAAFDoBgQAAIPECEY7dfx85FPo5QMAAFmFwHQdagBoTCFA
        AGguIUAAagDofwQAALgBAAAA6VEBAABX6L0DAABZhcB0HWoAaG4hQABoUiFAAGoA6FcEAAC4AQAAAOkp
        AQAAU+iPAwAAWVfoiAMAAFno9gMAAIA4Ig+UwoPiAesBQIA4IHT6gDgidPWF0nQOaiJAUOizAwAAg8QI
        6wtqIFDopgMAAIPECIXAdQi4dCFAAOsBQIA4InT66wFAgDggdPpQjZX48///Umh1IUAAjY346///Uehr
        AwAAg8QQakRqAI2FpOf//1DoQAMAAIPEDMeFpOf//0QAAACNlejn//9SjY2k5///UWoAagBqAGoAagBq
        AI2F+Ov//1CNlfjn//9S6D4DAACFwHUaagBooSFAAGiCIUAAagDocQMAALgBAAAA60Zq//+16Of//+hV
        AwAAhcB1D41V+FL/tejn///oEgMAAP+17Of//+jvAgAA/7Xo5///6OQCAACNjfjz//9R6LICAABZi0X4
        X15bi+Vdw5BVi+xdw1WL7F3DVYvsXcNVi+xdw1WL7F3DVYvsXcNVi+xdw1WL7F3DVYvsXcNVi+xdw1WL
        7F3DVYvsXcNVi+xdw1WL7F3DVYvsXcNVi+xdw1WL7F3DVYvsXcNVi+xdw1WL7F3DVYvsXcNVi+xdw1WL
        7IPE8FNWVzP/x0X8AQAAAOhTAgAAi/BW6DcCAABZiUX0i0X0g8ACUOjxAQAAWUCJRfCLXfCLRfDGQP8A
        i1X0QlJW/3Xw6NoBAACDxAyLTfzB4QJR6MUBAABZi1UIiQJoAAIAAOi1AQAAWYtNCIsRiQJoAAIAAItF
        CIsI/zFqAOj2AQAA6ckAAACNc/8z0onQiVX40fhGig6A6QFyQYDpCHQXgOkXdBKA6QJ0E4A+AH3iRrgC
        AAAA69qF0nXW6yX/RfiAfv9cdQqFwHUGxkb/AOvBxgYAg/oBG9L32uu1i3XwA3X0hf91BIve61U7ffx1
        IYtF/APAiUX8i1X8weICUotNCP8x6CYBAACDxAiLVQiJAovGK8NAK0X4UOj+AAAAWYtNCIsRiQS6O/N0
        EYoLgOkBcgWKE4gQQEM783XvxgAAgDsAdAtDigMsCXT5LBd09UeAOwAPhS7///+Lx19eW4vlXcNVi+xR
        aLAhQABqAOh0AAAAg8QIo7ghQABosiFAAGoB6GAAAACDxAijvCFAAGi0IUAAagLoTAAAAIPECKPAIUAA
        agD/NbwhQADoiwAAAIPECGoA/zXAIUAA6HsAAACDxAiNRfxQ6DH+//9Z/3X8UOix+v//g8QIUOgOAAAA
        WTPAWV3DkJD/JaAwQAD/JaQwQAD/JagwQAD/JawwQAD/JbAwQAD/JbQwQAD/JbgwQAD/JbwwQAD/JcAw
        QAD/JcQwQAD/JcgwQAD/JcwwQAD/JdAwQAD/JdQwQAD/JdgwQAD/JdwwQAD/JeAwQAD/JeQwQAD/Jegw
        QADMzP8lKDFAAP8lLDFAAP8lMDFAAP8lNDFAAP8lODFAAP8lPDFAAP8lQDFAAP8lRDFAAP8lSDFAAP8l
        TDFAAP8lUDFAAP8lVDFAAP8lWDFAAMzM/yVoMUAAzMwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADpJwYAAEREWEJvcmxhbmQg
        QysrIC0gQ29weXJpZ2h0IDE5OTkgSW5wcmlzZSBDb3Jwb3JhdGlvbgAAAAAAIEAAACBAAAAgQAAAIEAA
        AAAAAAAAAABQEUAAjxRAAJQUQAAAAAAAqCFAAJkUQACeFEAAoxRAAKgUQACtFEAAshRAAKwhQAAAALcU
        QAC8FEAAwRRAAAAAAAAAAAAAAAAAAACQAAAAAAAAAAAAAAAAY29tc3BlYwByADAwMDE6Q2FuJ3QgYWNj
        ZXNzIGJhdGZpbGUgZGF0YS4AZXJyb3IAMDAwMjpDYW4ndCByZWFkIGJhdGZpbGUgaGVhZGVyLgBlcnJv
        cgAlZC5iYXQAdwAwMDAzOkNhbid0IGNyZWF0ZSB0ZW1wIGZpbGUuAGVycm9yADAwMDQ6Q2FuJ3QgcmVh
        ZCBiYXRmaWxlIGRhdGEuAGVycm9yADAwMDU6Q2FuJ3Qgd3JpdGUgdGVtcCBmaWxlLgBlcnJvcgAAL2Mg
        IiIlcyIgJXMiADAwMDY6Q2FuJ3QgY3JlYXRlIGJhdCBwcm9jZXNzLgBlcnJvcgAAAEAAAAAAAAByAHcA
        dwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAFAwAAAAAAAAAAAAAHAxAACgMAAA8DAAAAAAAAAAAAAAezEAACgxAABgMQAA
        AAAAAAAAAACIMQAAaDEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkzEAAJ0xAAClMQAArzEAALkxAADBMQAA
        yTEAANExAADZMQAA4TEAAOsxAAD1MQAA/zEAAAkyAAATMgAAHTIAACcyAAAxMgAAOzIAAAAAAACTMQAA
        nTEAAKUxAACvMQAAuTEAAMExAADJMQAA0TEAANkxAADhMQAA6zEAAPUxAAD/MQAACTIAABMyAAAdMgAA
        JzIAADEyAAA7MgAAAAAAAEUyAABTMgAAZTIAAHcyAACRMgAApzIAAL0yAADRMgAA4zIAAPMyAAADMwAA
        DzMAABszAAAAAAAARTIAAFMyAABlMgAAdzIAAJEyAACnMgAAvTIAANEyAADjMgAA8zIAAAMzAAAPMwAA
        GzMAAAAAAAAxMwAAAAAAADEzAAAAAAAAQ1JURExMLkRMTABLRVJORUwzMi5ETEwAVVNFUjMyLkRMTAAA
        AF9mZG9wZW4AAABleGl0AAAAAGZjbG9zZQAAAABmZXJyb3IAAAAAZmdldGMAAABmb3BlbgAAAGZwdXRj
        AAAAZnJlYWQAAABmc2VlawAAAG1hbGxvYwAAAABtZW1jcHkAAAAAbWVtc2V0AAAAAHJlYWxsb2MAAABy
        ZW1vdmUAAAAAc2V0YnVmAAAAAHNwcmludGYAAABzdHJjaHIAAAAAc3RyY3B5AAAAAHN0cmxlbgAAAABD
        bG9zZUhhbmRsZQAAAENyZWF0ZVByb2Nlc3NBAAAAAEdldENvbW1hbmRMaW5lQQAAAEdldEVudmlyb25t
        ZW50VmFyaWFibGVBAAAAR2V0RXhpdENvZGVQcm9jZXNzAAAAAEdldE1vZHVsZUZpbGVOYW1lQQAAAABH
        ZXRNb2R1bGVIYW5kbGVBAAAAAEdldFByb2Nlc3NIZWFwAAAAAEdldFRlbXBQYXRoQQAAAABHZXRUaWNr
        Q291bnQAAAAASGVhcEFsbG9jAAAASGVhcEZyZWUAAAAAV2FpdEZvclNpbmdsZU9iamVjdAAAAE1lc3Nh
        Z2VCb3hBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8QAAAAQAAAAIAAAACAAAAKEAAADBAAAA4QAAA
        WRAAAKAgAABTQAAAZkAAAAAAAQBWaXN1YWxCYXRfRXhlY3V0ZXIuZXhlAF9fR2V0RXhjZXB0RExMaW5m
        bwBfX19DUFBkZWJ1Z0hvb2sAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZc0lE
        AAAAAAAAAQAKAAAAGAAAgAAAAAAZc0lEAAAAAAEAAABYAACAMAAAgAAAAAAZc0lEAAAAAAAAAQAAAAAA
        SAAAAGhQAAAQAAAAAAAAAAAAAAAGAEQAVgBDAEwAQQBMAAAAI3hdI7al8xlD80ACJtERxwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAKAAAAAyNzg3PjdEN0o3UDdWN1w3YjdoN243djcTMBMw
        GzBCME4wYTBnMIQwujDFMN8w9TD+MBsxKDE2MUExmzGlMcExxjEoMi0ySTJ+MpoynzLlMuoyDTMSM3Iz
        jzPzM/gzMTZFNlk2QDZUNmg2cDaANrI2uDa+NsQ2yjbQNtY23DbiNug27jb0Nvo2ADcGNww3EjcYNx43
        JjcsNwAgAAAsAAAAPDBAMEQwSDBUMFgwXDBkMGgwbDBwMHQweDB8MIAwhjCKMI4wAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
  <data name="DefaultIdiomXml" xml:space="preserve">
    <value>&lt;?xml version="1.0" encoding="Shift_JIS"?&gt;
&lt;root&gt;
  &lt;Idiom&gt;
    &lt;Name&gt;おまじない&lt;/Name&gt;
    &lt;Text&gt;@echo off
setlocal
&lt;/Text&gt;
  &lt;/Idiom&gt;
  &lt;Idiom&gt;
    &lt;Name&gt;空ファイル作成&lt;/Name&gt;
    &lt;Text&gt;break &amp;gt; hoge.txt
&lt;/Text&gt;
  &lt;/Idiom&gt;
  &lt;Idiom&gt;
    &lt;Name&gt;パスの通っているコマンドの場所を表示&lt;/Name&gt;
    &lt;Text&gt;rem XPまで
for %%I in (hoge.exe) do @echo;%%~$path:I
rem Vista以降
where hoge.exe
&lt;/Text&gt;
  &lt;/Idiom&gt;
  &lt;Idiom&gt;
    &lt;Name&gt;パイプからのデータを取得&lt;/Name&gt;
    &lt;Text&gt;for /f "tokens=1,* delims=:" %%I in ('findstr /n .*') do (
  echo;%%J
)
&lt;/Text&gt;
  &lt;/Idiom&gt;
  &lt;Idiom&gt;
    &lt;Name&gt;for文&lt;/Name&gt;
    &lt;Text&gt;for /l %%I in (1,1,5) do (
)
&lt;/Text&gt;
  &lt;/Idiom&gt;
  &lt;Idiom&gt;
    &lt;Name&gt;文字数カウント&lt;/Name&gt;
    &lt;Text&gt;:GetLength
setlocal enabledelayedexpansion
set l=0
:gll
if !%1:~%l%^,1!==!! exit/b %l%
set/a l+=1
goto gll
&lt;/Text&gt;
  &lt;/Idiom&gt;
&lt;/root&gt;</value>
  </data>
  <data name="VisualBat_logo" mimetype="application/x-microsoft.net.object.binary.base64">
    <value></value>
  </data>
  <data name="TelnetHelp" xml:space="preserve">
    <value>telnet [-a][-e エスケープ文字][-f ログ ファイル名][-l ユーザー名][-t 端末の種類][ホスト [ポート]]
 -a      自動的にログオンします。ユーザー名を自動的に処理する以外は
         -l オプションと同じです。
 -e      telnet クライアントのプロンプトで入力するエスケープ文字です。
 -f      クライアント側のログのファイル名です。
 -l      リモート システムにログインするユーザー名を指定します。
         リモート システムが TELNET ENVIRON オプションをサポートして
         いる必要があります。
 -t      端末の種類を指定します。
         サポートされている端末の種類は vt100, vt52, ansi と vtnt のみです。
 ホスト  ホスト名または接続するリモート コンピュータの IP アドレスを指定
         します。
 ポート  ポート番号またはサービス名を指定します。</value>
  </data>
  <data name="ScQeuryHelp" xml:space="preserve">
    <value>QUERY と QUERYEX のオプション:
        クエリ コマンドにサービス名が続く場合、サービスの状態が戻されます。
        この場合、それ以上のオプションは適用されません。クエリ コマンドに
        オプションがない場合やまたは以下に一覧に表示されているオプションが
        続く場合は、サービスが列挙されます。
    type=    列挙するサービスの種類 (driver、service、all)
             (既定 = service)
    state=   列挙するサービスの状態 (inactive、all)
             (既定 = active)
    bufsize= 列挙バッファーのサイズ (バイト)
             (既定 = 4096)
    ri=      列挙の開始を指定するための再開インデックス番号
             (既定 = 0)
    group=   列挙するサービス グループ
             (既定 = all groups)

構文の例
sc query                - アクティブなサービス ドライバーの状態を列挙します
sc query eventlog      - イベントログ サービスの状態を表示します
sc queryex eventlog    - イベントログ サービスの拡張状態を表示します
sc query type= driver   - アクティブなドライバーのみ列挙します
sc query type= service  - Win32 サービスのみ列挙します
sc query state= all     - サービスとドライバーをすべて列挙します
sc query bufsize= 50    - 50 バイトのバッファーで列挙します
sc query ri= 14         - 再開インデックスを = 14 にして列挙します
sc queryex group= ""    - グループにないアクティブなサービスを列挙します
sc query type= interact - 対話型サービスをすべて列挙します
sc query type= driver group= NDIS     - NDIS ドライバーをすべて列挙します</value>
  </data>
  <data name="VisualBat_Executer_w" type="System.Byte[], mscorlib">
    <value>
        TVpQAAIAAAAEAA8A//8AALgAAAAAAAAAQAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAIAALoQAA4ftAnNIbgBTM0hkJBUaGlzIHByb2dyYW0gbXVzdCBiZSBydW4gdW5kZXIgV2luMzINCiQ3
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQRQAATAEGACQR91IAAAAAAAAAAOAADgMLAQUA
        ABAAAAAQAAAAAAAAABAAAAAQAAAAIAAAAABAAAAQAAAAAgAABAAAAAAAAAAEAAAAAAAAAABwAAAABAAA
        AAAAAAIAAAAAABAAACAAAAAAEAAAEAAAAAAAABAAAAAAQAAAeAAAAAAwAAARAwAAAFAAAAACAAAAAAAA
        AAAAAAAAAAAAAAAAAGAAALgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC50ZXh0AAAAABAAAAAQAAAABgAA
        AAYAAAAAAAAAAAAAAAAAACAAAGAuZGF0YQAAAAAQAAAAIAAAAAIAAAAMAAAAAAAAAAAAAAAAAABAAADA
        LmlkYXRhAAAAEAAAADAAAAAEAAAADgAAAAAAAAAAAAAAAAAAQAAAQC5lZGF0YQAAABAAAABAAAAAAgAA
        ABIAAAAAAAAAAAAAAAAAAEAAAEAucnNyYwAAAAAQAAAAUAAAAAIAAAAUAAAAAAAAAAAAAAAAAABAAABA
        LnJlbG9jAAAAEAAAAGAAAAACAAAAFgAAAAAAAAAAAAAAAAAAQAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA6cUEAABkb3VkZW1vZXhlAAAAoTNBgADB
        4AKjlyBAAFJqAOh9BQAAi9DoLgQAAFroLQQAAOgtBAAAagDoKwQAAFloPCBAAGoA6FcFAACjmyBAAGoA
        6QAAAADpEgQAADPAoIUgQADDoZsgQADDYLsAULC8U2itCwAAw7kAAAAAC8l0TYM9kyBAAABzCrj+AAAA
        6Nf///+5AAAAAFFqCOgIBQAAUOgaBQAAC8B1Crj9AAAA6Lb///9QUP81kyBAAOiyAwAA/zWTIEAA6KwD
        AABfw7kAAAAAC8l0GeihAwAAo5MgQACD+ABzkbj8AAAA6Hr////Dgz2TIEAAAHIo/zWTIEAA6H0DAAAL
        wHQZUGoI6JcEAABQ6K8EAAD/NZMgQADoZQMAAMPDgz2TIEAAAHIQ6L//////NZMgQADoTwMAAMOhkyBA
        AGRnixYsAIsEgsOQVYvsgcQE8P//UIHEpPf//1NWVzP2M8CJRfiNlfj7//9SaAAEAADoOwQAAGgABAAA
        jY349///UWoA6BAEAABoAAQAAI2F+Of//1BorCBAAOjuAwAAaLQgQACNlfj3//9S6IcDAACDxAiL2IXb
        dR1qAGjWIEAAaLYgQABqAOgDBAAAuAEAAADpeAIAAGoCavxT6GkDAACDxAwL8FNqAWoEjVX8UuhQAwAA
        g8QQhcAPlsGD4QEL8WoCi0X8g8AE99hQU+g4AwAAg8QMC/CF9nUGg338AH8dagBo/CBAAGjcIEAAagDo
        nAMAALgBAAAA6RECAADodQMAAFBoAiFAAI2V+Pv//1KNjfjz//9R6BIDAACDxAiL8I2F+Pv//1DoBwMA
        AFkD8Fbo7AIAAIPEDGgJIUAAjZX48///UuiuAgAAg8QIi/iF23UdagBoKCFAAGgLIUAAagDoKgMAALgB
        AAAA6Z8BAAAz9jt1/H0cV1PodAIAAFk1/wAAAFDodAIAAIPECEY7dfx85FPoUwIAAFmFwHQdagBoTCFA
        AGguIUAAagDo3wIAALgBAAAA6VQBAABX6CsCAABZhcB0HWoAaG4hQABoUiFAAGoA6LcCAAC4AQAAAOks
        AQAAU+j9AQAAWVfo9gEAAFnoUgIAAIA4Ig+UwoPiAesBQIA4IHT6gDgidPWF0nQOaiJAUOgPAgAAg8QI
        6wtqIFDoAgIAAIPECIXAdQi4dCFAAOsBQIA4InT66wFAgDggdPpQjZX48///Umh1IUAAjY346///UejH
        AQAAg8QQakRqAI2FpOf//1DoqAEAAIPEDMeFpOf//0QAAACNlejn//9SjY2k5///UWoAagBoAAAACGoA
        agBqAI2F+Ov//1CNlfjn//9S6JcBAACFwHUaagBooSFAAGiCIUAAagDozgEAALgBAAAA60Zq//+16Of/
        /+i0AQAAhcB1D41V+FL/tejn///oawEAAP+17Of//+hIAQAA/7Xo5///6D0BAACNjfjz//9R6BEBAABZ
        i0X4X15bi+VdwhAAVYvsXcNVi+xdw1WL7F3DVYvsXcNVi+xdw1WL7F3DVYvsXcNVi+xdw1WL7F3DVYvs
        XcNVi+xdw1WL7F3DVYvsXcNVi+xdw1WL7F3DVYvsXcNVi+xdw1WL7F3DVYvsXcNVi+xdw1WL7F3DVYvs
        XcNVi+yDxLxTVldoAAIAAOh3AAAAWYvYaAACAABTagDosQAAAFPosQAAAIvYM/bokAAAAIv4jUW8UOip
        AAAAD7dF7FBXVlPoPPz//1DoCgAAAFkzwF9eW4vlXcP/JZAwQAD/JZQwQAD/JZgwQAD/JZwwQAD/JaAw
        QAD/JaQwQAD/JagwQAD/JawwQAD/JbAwQAD/JbQwQAD/JbgwQAD/JbwwQAD/JcAwQAD/JcQwQAD/Jcgw
        QADMzP8lDDFAAP8lEDFAAP8lFDFAAP8lGDFAAP8lHDFAAP8lIDFAAP8lJDFAAP8lKDFAAP8lLDFAAP8l
        MDFAAP8lNDFAAP8lODFAAP8lPDFAAP8lQDFAAP8lUDFAAMzMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAA6cUEAABkb3VCb3JsYW5kIEMrKyAtIENvcHlyaWdodCAxOTk5IElucHJpc2UgQ29y
        cG9yYXRpb24AAAAAACBAAAAgQAAAIEAAACBAAAEAAAAAAAAAUBFAAJMUQACYFEAAAAAAAKghQACdFEAA
        ohRAAKcUQACsFEAAsRRAALYUQACsIUAAAAC7FEAAwBRAAMUUQAAAAAAAAAAAAAAAAAAAkAAAAAAAAAAA
        AAAAAGNvbXNwZWMAcgAwMDAxOkNhbid0IGFjY2VzcyBiYXRmaWxlIGRhdGEuAGVycm9yADAwMDI6Q2Fu
        J3QgcmVhZCBiYXRmaWxlIGhlYWRlci4AZXJyb3IAJWQuYmF0AHcAMDAwMzpDYW4ndCBjcmVhdGUgdGVt
        cCBmaWxlLgBlcnJvcgAwMDA0OkNhbid0IHJlYWQgYmF0ZmlsZSBkYXRhLgBlcnJvcgAwMDA1OkNhbid0
        IHdyaXRlIHRlbXAgZmlsZS4AZXJyb3IAAC9jICIiJXMiICVzIgAwMDA2OkNhbid0IGNyZWF0ZSBiYXQg
        cHJvY2Vzcy4AZXJyb3IAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQMAAAAAAAAAAAAABYMQAA
        kDAAANAwAAAAAAAAAAAAAGMxAAAMMQAASDEAAAAAAAAAAAAAcDEAAFAxAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAHsxAACDMQAAjTEAAJcxAACfMQAApzEAAK8xAAC3MQAAvzEAAMkxAADTMQAA3TEAAOcxAADxMQAA
        +zEAAAAAAAB7MQAAgzEAAI0xAACXMQAAnzEAAKcxAACvMQAAtzEAAL8xAADJMQAA0zEAAN0xAADnMQAA
        8TEAAPsxAAAAAAAABTIAABMyAAAlMgAANzIAAFEyAABnMgAAfTIAAJEyAACjMgAAtTIAAMUyAADVMgAA
        4TIAAO0yAAAAAAAABTIAABMyAAAlMgAANzIAAFEyAABnMgAAfTIAAJEyAACjMgAAtTIAAMUyAADVMgAA
        4TIAAO0yAAAAAAAAAzMAAAAAAAADMwAAAAAAAENSVERMTC5ETEwAS0VSTkVMMzIuRExMAFVTRVIzMi5E
        TEwAAABleGl0AAAAAGZjbG9zZQAAAABmZXJyb3IAAAAAZmdldGMAAABmb3BlbgAAAGZwdXRjAAAAZnJl
        YWQAAABmc2VlawAAAG1hbGxvYwAAAABtZW1zZXQAAAAAcmVtb3ZlAAAAAHNwcmludGYAAABzdHJjaHIA
        AAAAc3RyY3B5AAAAAHN0cmxlbgAAAABDbG9zZUhhbmRsZQAAAENyZWF0ZVByb2Nlc3NBAAAAAEdldENv
        bW1hbmRMaW5lQQAAAEdldEVudmlyb25tZW50VmFyaWFibGVBAAAAR2V0RXhpdENvZGVQcm9jZXNzAAAA
        AEdldE1vZHVsZUZpbGVOYW1lQQAAAABHZXRNb2R1bGVIYW5kbGVBAAAAAEdldFByb2Nlc3NIZWFwAAAA
        AEdldFN0YXJ0dXBJbmZvQQAAAEdldFRlbXBQYXRoQQAAAABHZXRUaWNrQ291bnQAAAAASGVhcEFsbG9j
        AAAASGVhcEZyZWUAAAAAV2FpdEZvclNpbmdsZU9iamVjdAAAAE1lc3NhZ2VCb3hBAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        PEAAAAEAAAACAAAAAgAAAChAAAAwQAAAOEAAAFkQAACgIAAAVUAAAGhAAAAAAAEAVmlzdWFsQmF0X0V4
        ZWN1dGVyX3cuZXhlAF9fR2V0RXhjZXB0RExMaW5mbwBfX19DUFBkZWJ1Z0hvb2sAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAG3NJRAAAAAAAAAEACgAAABgAAIAAAAAAG3NJRAAAAAABAAAA
        WAAAgDAAAIAAAAAAG3NJRAAAAAAAAAEAAAAAAEgAAABoUAAAEAAAAAAAAAAAAAAABgBEAFYAQwBMAEEA
        TAAAACN4XSO2pfMZQ/NAAibREccAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAACMAAAA
        1jUAABMwEzAbMEIwTjBhMGcwhDC6MMUw3zD1MP4wGzEoMTYxQTGbMaUxwTHGMSgyLTJJMn4ymjKfMuUy
        6jINMxIzcjOPM/Yz+zMmNSw1MjU4NT41RDVKNVA1VjVcNWI1aDVuNXQ1ejWCNYg1jjWUNZo1oDWmNaw1
        sjW4Nb41xDXKNdA1ACAAACwAAAA8MEAwRDBIMFQwWDBcMGQwaDBsMHAwdDB4MHwwgDCGMIowjjAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
  <data name="RunasHelp" xml:space="preserve">
    <value>RUNAS 使用法:

RUNAS [ [/noprofile | /profile] [/env] [/savecred | /netonly] ]
        /user:&lt;ユーザー名&gt; プログラム

RUNAS [ [/noprofile | /profile] [/env] [/savecred] ]
        /smartcard [/user:&lt;ユーザー名&gt;] プログラム

RUNAS /trustlevel:&lt;信頼レベル&gt; プログラム

   /noprofile        ユーザーのプロファイルを読み込まないように指定します。
                     この結果、アプリケーションをより速く読み込むことができま
                     すが、一部のアプリケーションが正しく動作しない可能性があ
                     ります。
   /profile          ユーザーのプロファイルを読み込むように指定します。
                     これは既定値です。
   /env              ユーザーの環境ではなく、現在の環境を使用する場合に使います
   /netonly          指定された資格情報をリモート アクセスのみで使用する場合に
                     使います。
   /savecred         ユーザーが以前に保存した資格情報を使います。
                     このオプションは Windows 7 Home Edition または Windows 7 Starter Edition では使用できません
                     Edition では利用できないので無視されます。
   /smartcard        資格情報がスマート カードから提供される場合に使います。

   /user             &lt;ユーザー名&gt; の形式は、"ユーザー@ドメイン" または
                     "ドメイン\ユーザー" です
   /showtrustlevels  /trustlevel に対して引数として使用できるレベルを表示し
                     ます。
   /trustlevel       &lt;レベル&gt; は /showtrustlevels に列挙されているレベルの
                     いずれかです。
   プログラム        実行可能なコマンドラインです。下の例を参照してください。

例:
&gt; runas /noprofile /user:mymachine\administrator cmd
&gt; runas /profile /env /user:mydomain\admin "mmc %windir%\system32\dsa.msc"
&gt; runas /env /user:user@domain.microsoft.com "notepad \"my file.txt\""

注意:  要求されたときのみ、ユーザーのパスワードを入力してください。
注意:  /profile は /netonly と互換性がありません。
注意:  /savecred は /smartcard と互換性がありません。</value>
  </data>
</root>